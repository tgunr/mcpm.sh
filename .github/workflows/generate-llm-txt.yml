name: Generate LLM.txt

on:
  # Trigger on releases
  release:
    types: [published]
  
  # Trigger on pushes to main branch
  push:
    branches: [main]
    paths:
      - 'src/mcpm/commands/**'
      - 'src/mcpm/cli.py'
      - 'scripts/generate_llm_txt.py'
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  generate-llm-txt:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Generate llm.txt
      run: |
        python scripts/generate_llm_txt.py
    
    - name: Check for changes
      id: check_changes
      run: |
        if git diff --quiet llm.txt; then
          echo "no_changes=true" >> $GITHUB_OUTPUT
        else
          echo "no_changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.check_changes.outputs.no_changes == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add llm.txt
        git commit -m "docs: update llm.txt for AI agents [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Pull Request (for releases)
      if: github.event_name == 'release' && steps.check_changes.outputs.no_changes == 'false'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "docs: update llm.txt for release ${{ github.event.release.tag_name }}"
        title: "ðŸ“š Update llm.txt for AI agents (Release ${{ github.event.release.tag_name }})"
        body: |
          ## ðŸ¤– Automated llm.txt Update
          
          This PR automatically updates the llm.txt file for AI agents following the release of version ${{ github.event.release.tag_name }}.
          
          ### Changes
          - Updated command documentation
          - Refreshed examples and usage patterns
          - Updated version information
          
          ### What is llm.txt?
          llm.txt is a comprehensive guide for AI agents to understand how to interact with MCPM programmatically. It includes:
          - All CLI commands with parameters and examples
          - Environment variables for automation
          - Best practices for AI agent integration
          - Error handling and troubleshooting
          
          This file is automatically generated from the CLI structure using `scripts/generate_llm_txt.py`.
        branch: update-llm-txt-${{ github.event.release.tag_name }}
        delete-branch: true